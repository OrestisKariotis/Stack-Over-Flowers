buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin:'idea'
apply plugin: 'org.springframework.boot'

group = 'gr.ntua.ece.softeng'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
	baseName = 'kidspiration-platform'
	version = '0.1.0'
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework:spring-jdbc')
	compile('mysql:mysql-connector-java')
	compile('com.h2database:h2')
	api('org.apache.commons:commons-math3:3.6.1')
	compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.2.1'
	compile 'org.elasticsearch:elasticsearch:6.2.1'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
	//runtime('mysql:mysql-connector-java')
	compile 'org.json:json:20170516'
	compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.10'
}

def webappDir = "$projectDir/src/main/kid-front"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "buildAngular"
}
 
task buildAngular(type:Exec) {
	// installAngular should be run prior to this task
	dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// ng doesn't exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build", "--env=prod"
	} else {
		commandLine "ng", "build"
	}
}
 
task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "install"
	}
}